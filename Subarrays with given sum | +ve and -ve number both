//Given an unsorted array arr[] of N integers and a sum. The task is to count the number of subarrays which add to a given number.

//{ Driver Code Starts


#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution
{
  public:
    int subArraySum(int arr[], int n, int sum)
    {
    	int res=0;
    	int curr_sum=0;
        unordered_map<int,int>m;
        for(int i=0; i<n; i++){
            curr_sum+=arr[i];
            if(curr_sum==sum){
                res++;
            }
            if(m.find(curr_sum-sum)!=m.end()){
                res=res+m[curr_sum-sum];
            }
           m[curr_sum]++;
        }
        return res;
    }
};

//{ Driver Code Starts.
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
	    int n,sum=0;
	    cin>>n;
	    int arr[n];
	    for(int i=0;i<n;i++)
	    cin>>arr[i];
	    cin>>sum;
	    Solution ob;
	    cout<<ob.subArraySum(arr, n, sum);
	    cout<<'\n';
	}
	return 0;
}
// } Driver Code Ends
