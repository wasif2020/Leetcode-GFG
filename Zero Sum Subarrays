//You are given an array arr[] of size n. Find the total count of sub-arrays having their sum equal to 0.

//{ Driver Code Starts
//Initial function template for C++

#include<bits/stdc++.h>
using namespace std;
#define ll long long

// } Driver Code Ends
//User function template for C++

class Solution{
    public:
    //Function to count subarrays with sum equal to 0.
    ll findSubarray(vector<ll> arr, int n ) {
        ll int ans=0;
       ll int curr_sum=0;
        unordered_map<int,int>m;
        for(int i=0; i<n; i++){
            curr_sum+=arr[i];
            if(curr_sum==0){
                ans++;
            }
            if(m.find(curr_sum)!=m.end()){
                ans=ans+m[curr_sum];
            }
            m[curr_sum]++;
        }
        return ans;
    }
};

//{ Driver Code Starts.
int main()
 {
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n; //input size of array
       
        vector<ll> arr(n,0);
        
        for(int i=0;i<n;i++)
            cin>>arr[i]; //input array elements
        Solution ob;
        cout << ob.findSubarray(arr,n) << "\n";
    }
	return 0;
}
// } Driver Code Ends
